		//Exercises 1.1)
		/*Declare five variables choosing for each of them the most 
		 * appropriate of the types byte, sbyte, short, ushort, int, 
		 * uint, long, ulong to represent the following values: 52130,
		 * -115, 4825932, 97, -10000.*/
     
		ushort a = 52130; //0 to 65,535
    sbyte b = -115; //-128 to 127
    uint c = 4825932; //0 to 4,294,967,295
    byte d = 97; //0 to 255
    int e = -10000; //-2,147,483,648 to 2,147,483,647
    
    //Exercises 1.2)
    /*Write a program that safely compares floating-point numbers with
    * precision of 0.000001.Examples:
    * (5.3 ; 6.01) → false;
    * (5.00000001 ; 5.00000003) → true*/
    
    float f1 = 5.3f;
    float f2 = 6.01f;
    bool bool1 = f1 == f2;
    Console.WriteLine("({0} ; {1}) --> {2}", f1, f2, bool1);

		float f3 = 5.00000001f;
		float f4 = 5.00000003f;
    bool bool2 = f3 == f4;
    Console.WriteLine("({0} ; {1}) --> {2}", f3, f4, bool2);
    
    
    //Exercises 1.3)
    /* Declare two string variables and assign them with “Hello” and
		 * “World”. Declare an object variable and assign it with the
		 * concatenation of the first two variables (mind adding an interval).
		 * Declare a third string variable and initialize it with the value of the
		 * object variable (you should perform type casting).*/

      string s1 = "Hello";
      string s2 = "World";
      object obj1 = s1 + " " + s2; 
      string s3 = (string)obj1;
      Console.WriteLine(obj1);
      Console.WriteLine(s3);

      //Exercises 2.1)
      /*Find online more information about ASCII (American Standard Code
			 * for Information Interchange) and write a program that prints the entire
			 * ASCII table of characters on the console.*/

      for (int i = 1; i < 256; i++)
      {
        Console.WriteLine(i + " = " + (Char)i);
      }

      //Exercises 2.2)
      /*Create a program that assigns null values to an integer and
			 * to double variables. Try to print them on the console,
			 * try to add some values orthe null literal to them and
			 * see the result.*/

       int? someInteger = null;
       Console.WriteLine("This is nullable type of integer value");
			 Console.WriteLine("someInteger = {0}", someInteger);
       someInteger = 3;
       Console.WriteLine("someInteger = {0}", someInteger);

       double? someDouble = null;
			 Console.WriteLine("This is nullable type of double value");
       Console.WriteLine("someDouble = {0}", someDouble);
       someDouble = 2;
       Console.WriteLine("someDouble = {0}", someDouble);

